{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory Name",
			"defaultValue": "adf-conf"
		},
		"asd_LogADF_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "sql-logadf"
		},
		"asd_conf19_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "sql-awadf"
		},
		"ats_conf19_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "asc-conf19"
		},
		"hdinsight_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "ratomir"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/asd_LogADF')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('asd_LogADF_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/asd_conf19')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('asd_conf19_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ats_conf19')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureTableStorage",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('ats_conf19_properties_typeProperties_connectionString_secretName')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/hdinsight')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsight",
				"typeProperties": {
					"clusterUri": "https://hd-conf-19.azurehdinsight.net",
					"userName": "[parameters('hdinsight_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "hdinsight-password"
					},
					"isEspEnabled": false,
					"linkedServiceName": {
						"referenceName": "hdinsightsconf",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDataToAnalytics')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "StartCopyToAnalytics1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[sp_insertIntoLogs]')]",
							"storedProcedureParameters": {
								"dataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"startDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "asd_LogADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EndCopyToAnalytics",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "If Condition2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[sp_finishAdf]')]",
							"storedProcedureParameters": {
								"dataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"endDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "asd_LogADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "IfFileExistsMovies",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "StartCopyToAnalytics1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "abs_hdinsightsconf",
								"type": "DatasetReference",
								"parameters": {
									"location": "hive/warehouse/movies.db/fullmovies/000000_0"
								}
							},
							"fieldList": [
								"exists"
							]
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "IfFileExistsMovies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('IfFileExistsMovies').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "CopyToAnalytics",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "AzureDataLakeStoreSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "abs_hdinsightsconf",
											"type": "DatasetReference",
											"parameters": {
												"location": "hive/warehouse/movies.db/fullmovies/000000_0"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "adl_input",
											"type": "DatasetReference",
											"parameters": {
												"fileName": "movies"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "IfFileExistsTop10RelevanceMovies",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "StartCopyToAnalytics1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "abs_hdinsightsconf",
								"type": "DatasetReference",
								"parameters": {
									"location": "hive/warehouse/movies.db/top10relevancetagpermovie/000000_0"
								}
							},
							"fieldList": [
								"exists"
							]
						}
					},
					{
						"name": "If Condition2",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "IfFileExistsTop10RelevanceMovies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@activity('IfFileExistsTop10RelevanceMovies').output.exists",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "Copy Data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "BlobSource",
											"recursive": true
										},
										"sink": {
											"type": "AzureDataLakeStoreSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "abs_hdinsightsconf",
											"type": "DatasetReference",
											"parameters": {
												"location": "hive/warehouse/movies.db/top10relevancetagpermovie/000000_0"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "adl_input",
											"type": "DatasetReference",
											"parameters": {
												"fileName": "top10RelevanceMovies"
											}
										}
									]
								}
							]
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/asd_LogADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDataToCosmosDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data to CosmosDB",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "StartCopyToCosmos",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataLakeStoreSource",
								"recursive": true
							},
							"sink": {
								"type": "DocumentDbCollectionSink",
								"nestingSeparator": ".",
								"writeBatchSize": 10000,
								"writeBehavior": "upsert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Prop_0": "movieid",
									"Prop_1": "title",
									"Prop_2": "ratings",
									"Prop_5": "imdblink",
									"Prop_6": "tmdblink"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "adl_input_movies",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "acd_conf19_movies",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "StartCopyToCosmos",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[sp_insertIntoLogs]')]",
							"storedProcedureParameters": {
								"dataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"startDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "asd_LogADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EndCopyToCosmos",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Data to CosmosDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[sp_finishAdf]')]",
							"storedProcedureParameters": {
								"dataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"endDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "asd_LogADF",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/asd_LogADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFileFromAWS3Bucket')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Links",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "loadFile",
								"value": "links.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": false
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AmazonS3forAzure",
								"type": "DatasetReference",
								"parameters": {
									"location": "forazure/links.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "abs_hdinsightsconf",
								"type": "DatasetReference",
								"parameters": {
									"location": "input/links.csv"
								}
							}
						]
					},
					{
						"name": "Movies",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "loadFile",
								"value": "movies.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": false
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AmazonS3forAzure",
								"type": "DatasetReference",
								"parameters": {
									"location": "forazure/movies.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "abs_hdinsightsconf",
								"type": "DatasetReference",
								"parameters": {
									"location": "input/movies.csv"
								}
							}
						]
					},
					{
						"name": "Genome-scores",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "loadFile",
								"value": "genome-scores.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": false
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AmazonS3forAzure",
								"type": "DatasetReference",
								"parameters": {
									"location": "forazure/genome-scores.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "abs_hdinsightsconf",
								"type": "DatasetReference",
								"parameters": {
									"location": "input/genome-scores.csv"
								}
							}
						]
					},
					{
						"name": "Tags",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "loadFile",
								"value": "tags.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": false
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AmazonS3forAzure",
								"type": "DatasetReference",
								"parameters": {
									"location": "forazure/tags.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "abs_hdinsightsconf",
								"type": "DatasetReference",
								"parameters": {
									"location": "input/tags.csv"
								}
							}
						]
					},
					{
						"name": "Genome-tags",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "loadFile",
								"value": "genome-tags.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": false
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AmazonS3forAzure",
								"type": "DatasetReference",
								"parameters": {
									"location": "forazure/genome-tags.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "abs_hdinsightsconf",
								"type": "DatasetReference",
								"parameters": {
									"location": "input/genome-tags.csv"
								}
							}
						]
					},
					{
						"name": "Ratings",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "loadFile",
								"value": "ratings.csv"
							}
						],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": false
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AmazonS3forAzure",
								"type": "DatasetReference",
								"parameters": {
									"location": "forazure/ratings.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "abs_hdinsightsconf",
								"type": "DatasetReference",
								"parameters": {
									"location": "input/ratings.csv"
								}
							}
						]
					},
					{
						"name": "LoadDataIntoTables",
						"type": "HDInsightHive",
						"dependsOn": [
							{
								"activity": "Links",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Movies",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Genome-scores",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Tags",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Genome-tags",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Ratings",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": "datastore/scripts/loadDataFromFiles.hql",
							"scriptLinkedService": {
								"referenceName": "hdinsightsconf",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "hdinsight",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "AWS"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/hdinsight')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FaildPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "StartFaildPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": false
							},
							"sink": {
								"type": "AzureDataLakeStoreSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "abs_hdinsightsconf",
								"type": "DatasetReference",
								"parameters": {
									"location": "faildlocation"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "adl_input",
								"type": "DatasetReference",
								"parameters": {
									"fileName": "somenewfiles"
								}
							}
						]
					},
					{
						"name": "SendFaildMessage",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Set Variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-55.northeurope.logic.azure.com:443/workflows/7f90d349b54547efaca83e8fcf31d2e0/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=gi0mIWDWAy5f1hRQTq--KNb2HXFaMb6mUu-GTDPoFnY",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"value": "@variables('httpBody')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set Variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "httpBody",
							"value": {
								"value": "@concat('{\n    \"message\": \"', activity('CopyData').error.message, '\",\n    \"dataFactoryName\": \"', pipeline().DataFactory, '\",\n    \"pipelineName\": \"', pipeline().Pipeline, '\",\n    \"receiver\": \"', pipeline().parameters.receiver, '\"\n}')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "StartFaildPipeline",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[sp_insertIntoLogs]')]",
							"storedProcedureParameters": {
								"dataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"startDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "asd_LogADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EndFaildPipeline",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CopyData",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[sp_finishAdf]')]",
							"storedProcedureParameters": {
								"dataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"endDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "asd_LogADF",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"receiver": {
						"type": "String",
						"defaultValue": "ratomir@live.com"
					}
				},
				"variables": {
					"httpBody": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/asd_LogADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ForEach')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetConfig",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": false
							},
							"dataset": {
								"referenceName": "AmazonS3forAzure",
								"type": "DatasetReference",
								"parameters": {
									"location": "config/files.csv"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetConfig",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetConfig').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 3,
							"activities": [
								{
									"name": "Copy_From_AWS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "FileSystemSource",
											"recursive": false
										},
										"sink": {
											"type": "BlobSink"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "AmazonS3forAzure",
											"type": "DatasetReference",
											"parameters": {
												"location": {
													"value": "@concat('forazure/',item().file_name, '.csv')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "abs_hdinsightsconf",
											"type": "DatasetReference",
											"parameters": {
												"location": {
													"value": "@concat('input/',item().file_name,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "AWS"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/asd_stageusers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asd_conf19",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Email",
						"type": "String"
					},
					{
						"name": "StreetAddress",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "UserId",
						"type": "Int32"
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[StageUsers]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/asd_conf19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ast_ProductWithCategory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asd_conf19",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "LastPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "nvarchar"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ParentProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PC_Name",
						"type": "nvarchar"
					},
					{
						"name": "PC_ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'dbo].[ProductWithCategory]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/asd_conf19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ast_Users')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asd_conf19",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"structure": [
					{
						"name": "Id",
						"type": "String",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "Name",
						"type": "String",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "Email",
						"type": "String",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "StreetAddress",
						"type": "String",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "City",
						"type": "String",
						"precision": 255,
						"scale": 255
					},
					{
						"name": "Country",
						"type": "String",
						"precision": 255,
						"scale": 255
					}
				],
				"typeProperties": {
					"tableName": "sourceTbl"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/asd_conf19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ast_product')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asd_conf19",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "ProductNumber",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "StandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ListPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "Weight",
						"type": "decimal",
						"precision": 8,
						"scale": 2
					},
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ProductModelID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SellStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "SellEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DiscontinuedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ThumbNailPhoto",
						"type": "varbinary"
					},
					{
						"name": "ThumbnailPhotoFileName",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'SalesLT].[Product]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/asd_conf19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ast_productcategory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asd_conf19",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ParentProductCategoryID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "nvarchar"
					},
					{
						"name": "rowguid",
						"type": "uniqueidentifier"
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"tableName": "[concat('[', 'SalesLT].[ProductCategory]')]"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/asd_conf19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/at_top10RelevanceTagPerMovie')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ats_conf19",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureTable",
				"structure": [
					{
						"name": "id",
						"type": "Int32"
					},
					{
						"name": "relevance",
						"type": "Double"
					},
					{
						"name": "tags",
						"type": "String"
					},
					{
						"name": "title"
					}
				],
				"typeProperties": {
					"tableName": "top10RelevanceTagPerMovie"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ats_conf19')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BulkCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "BulkCopy",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "StartBulkCopyAWS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "FileSystemSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink",
								"copyBehavior": "PreserveHierarchy"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "AmazonS3forAzure",
								"type": "DatasetReference",
								"parameters": {
									"location": "forazure/*"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "abs_hdinsightsconf_bulk",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LoadData",
						"type": "HDInsightHive",
						"dependsOn": [
							{
								"activity": "BulkCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "description",
								"value": "Data has been loaded"
							}
						],
						"typeProperties": {
							"scriptPath": "datastore/scripts/loadDataFromFiles.hql",
							"scriptLinkedService": {
								"referenceName": "hdinsightsconf",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "hdinsight",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Prepare movies",
						"type": "HDInsightHive",
						"dependsOn": [
							{
								"activity": "LoadData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "description",
								"value": "Movies loaded"
							}
						],
						"typeProperties": {
							"scriptPath": "datastore/scripts/prepareMovies.hql",
							"scriptLinkedService": {
								"referenceName": "hdinsightsconf",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "hdinsight",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "StartBulkCopyAWS",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[sp_insertIntoLogs]')]",
							"storedProcedureParameters": {
								"dataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"startDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "asd_LogADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EndBulkCopy",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Top 10 relevance movies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[sp_finishAdf]')]",
							"storedProcedureParameters": {
								"dataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"endDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "asd_LogADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Execute CopyDataToAnaytics",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "EndBulkCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyDataToAnalytics",
								"type": "PipelineReference"
							},
							"parameters": {}
						}
					},
					{
						"name": "Top 10 relevance movies",
						"type": "HDInsightHive",
						"dependsOn": [
							{
								"activity": "Prepare movies",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "description",
								"value": "Top10 movies founded"
							}
						],
						"typeProperties": {
							"scriptPath": "datastore/scripts/findTop10ReleavanceTagPerMovie.hql",
							"scriptLinkedService": {
								"referenceName": "hdinsightsconf",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "hdinsight",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "AWS"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/hdinsight')]",
				"[concat(variables('factoryId'), '/linkedServices/asd_LogADF')]",
				"[concat(variables('factoryId'), '/pipelines/CopyDataToAnalytics')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyAndMergeDataToSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data SQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "StartToCopyMergeDataSQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": false
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000,
								"preCopyScript": "TRUNCATE TABLE dbo.StageUsers",
								"sqlWriterStoredProcedureName": "[concat('[', 'dbo].[sp_UpdateUsers]')]",
								"sqlWriterTableType": "StageTbl"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Id": "Id",
									"Name": "Name",
									"Email": "Email",
									"StreetAddress": "StreetAddress",
									"City": "City",
									"Country": "Country"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "abs_users",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ast_Users",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "StartToCopyMergeDataSQL",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[sp_insertIntoLogs]')]",
							"storedProcedureParameters": {
								"dataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"startDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "asd_LogADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EndCopyMergeDataSQL",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Data SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[sp_finishAdf]')]",
							"storedProcedureParameters": {
								"dataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"endDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "asd_LogADF",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ast_Users')]",
				"[concat(variables('factoryId'), '/linkedServices/asd_LogADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDataToTable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data to Table",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "StartCopyToTable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataLakeStoreSource",
								"recursive": true
							},
							"sink": {
								"type": "AzureTableSink",
								"azureTableInsertType": "merge",
								"azureTablePartitionKeyName": "id",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Prop_0": "id",
									"Prop_1": "relevance",
									"Prop_2": "tags",
									"Prop_3": "title"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "adl_top10",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "at_top10RelevanceTagPerMovie",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "StartCopyToTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[sp_insertIntoLogs]')]",
							"storedProcedureParameters": {
								"dataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"startDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "asd_LogADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "EndCopyToTable",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Copy Data to Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[concat('[', 'dbo].[sp_finishAdf]')]",
							"storedProcedureParameters": {
								"dataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"endDate": {
									"value": {
										"value": "@formatDateTime(utcnow(),'yyyy-MM-dd hh:mm:ss')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"pipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"pipelineRunId": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "asd_LogADF",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/at_top10RelevanceTagPerMovie')]",
				"[concat(variables('factoryId'), '/linkedServices/asd_LogADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureDataLakeStoreSource",
								"recursive": true
							},
							"sink": {
								"type": "SqlSink",
								"writeBatchSize": 10000,
								"preCopyScript": "TRUNCATE TABLE dbo.StageUsers;"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"columnMappings": {
									"Name": "Name",
									"Email": "Email",
									"StreetAddress": "StreetAddress",
									"City": "City",
									"Country": "Country",
									"Id": "UserId"
								}
							}
						},
						"inputs": [
							{
								"referenceName": "adl_users",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "asd_stageusers",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/asd_stageusers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Product_ProductCategory_InnerJoin')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ast_product",
								"type": "DatasetReference"
							},
							"name": "product",
							"script": "source(output(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table') ~> product",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "ast_productcategory",
								"type": "DatasetReference"
							},
							"name": "productcategory",
							"script": "source(output(\n\t\tProductCategoryID as integer,\n\t\tParentProductCategoryID as integer,\n\t\tName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table') ~> productcategory",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ProductCategoryJoin",
								"type": "DatasetReference"
							},
							"name": "ProductCategorySink",
							"script": "Filter1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tmapColumn(\n\t\tProductID,\n\t\tName = product@Name,\n\t\tProductNumber,\n\t\tColor,\n\t\tStandardCost,\n\t\tListPrice,\n\t\tSize,\n\t\tWeight,\n\t\tProductCategoryID = product@ProductCategoryID,\n\t\tProductModelID,\n\t\tSellStartDate,\n\t\tSellEndDate,\n\t\tDiscontinuedDate,\n\t\tThumbNailPhoto,\n\t\tThumbnailPhotoFileName,\n\t\tModifiedDate = product@ModifiedDate,\n\t\tParentProductCategoryID,\n\t\tPC_Name = productcategory@Name,\n\t\tPC_ModifiedDate = productcategory@ModifiedDate\n\t)) ~> ProductCategorySink"
						},
						{
							"dataset": {
								"referenceName": "ast_ProductWithCategory",
								"type": "DatasetReference"
							},
							"name": "SinkToSQL",
							"script": "Filter1 sink(input(\n\t\tId as integer,\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tLastPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as double,\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as string,\n\t\tThumbnailPhotoFileName as string,\n\t\tModifiedDate as timestamp,\n\t\tParentProductCategoryID as integer,\n\t\tPC_Name as string,\n\t\tPC_ModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'table',\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tmapColumn(\n\t\tProductID,\n\t\tName = product@Name,\n\t\tProductNumber,\n\t\tColor,\n\t\tStandardCost,\n\t\tLastPrice = ListPrice,\n\t\tSize,\n\t\tWeight,\n\t\tProductCategoryID = product@ProductCategoryID,\n\t\tProductModelID,\n\t\tSellStartDate,\n\t\tSellEndDate,\n\t\tDiscontinuedDate,\n\t\tThumbnailPhotoFileName,\n\t\tModifiedDate = product@ModifiedDate,\n\t\tParentProductCategoryID,\n\t\tPC_Name = productcategory@Name,\n\t\tPC_ModifiedDate = productcategory@ModifiedDate\n\t)) ~> SinkToSQL"
						}
					],
					"transformations": [
						{
							"name": "JoinProduct",
							"script": "product, productcategory join(product@ProductCategoryID == productcategory@ProductCategoryID,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> JoinProduct"
						},
						{
							"name": "SortJoin",
							"script": "JoinProduct sort(desc(ProductModelID, true)) ~> SortJoin"
						},
						{
							"name": "Filter1",
							"script": "SortJoin filter(StandardCost > 1000) ~> Filter1"
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ast_product')]",
				"[concat(variables('factoryId'), '/datasets/ast_productcategory')]",
				"[concat(variables('factoryId'), '/datasets/ast_ProductWithCategory')]"
			]
		}
	]
}